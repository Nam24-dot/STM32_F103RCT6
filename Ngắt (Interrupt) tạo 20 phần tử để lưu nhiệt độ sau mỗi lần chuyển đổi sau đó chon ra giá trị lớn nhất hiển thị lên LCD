volatile float temperature[20];
volatile int flag = 0;
volatile int idx = 0;
volatile float sum_tmp = 0;
volatile float maxTemperature = 0;
int compare = 48;
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
{
flag = 1;
}
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
if(maxTemperature > compare)
GPIOB -> ODR ^= 1<<12;
if(maxTemperature < compare)
GPIOB -> BRR = 1<<12;
}
int main(void)
{
HAL_TIM_Base_Start_IT(&htim1);
HAL_ADCEx_Calibration_Start(&hadc1);
HAL_ADC_Start_IT(&hadc1);
while (1)
{
maxTemperature = temperature[0];
if(flag == 1)
{
temperature[idx]= (HAL_ADC_GetValue(&hadc1)/4096.0)*3.3*100.0;
if(maxTemperature < temperature[idx])
{
maxTemperature = temperature[idx];
}
if(idx<20)
{
++idx;
}
else
{
idx = 0;
LCD_setCursor(0, 0);
LCD_printf("%0.2f",maxTemperature);
}
flag = 0;
HAL_ADC_Start_IT(&hadc1);
}
}
}
